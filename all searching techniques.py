# -*- coding: utf-8 -*-
"""project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14T0YQDPUesDrnBvSe8oz1kZIskFpIhuw
"""

#linear search
#N is the length of array
#x is the element to be searched

def linearSearch(arr, N, x):
 
    for i in range(0, N):
        if (arr[i] == x):
            return i
    return -1

#main

arr = []
n = int(input("Enter the number of elements:"))

print("The elements of array:-")
for i in range(0,n):
  lst = int(input())

  arr.append(lst)

x = int(input("Enter the number to be searched:"))
N = len(arr)
 
#Function call
result = linearSearch(arr, N, x)
if(result == -1):
  print("Element is not present in array")
else:
  print("Element is present at index", result)

#binary search
#x is the number to be searched
#l is the lower element of the array
#h is the higher element of the array
def binarySearch(arr, l, h, x):

  if h>=l:
    mid = (l+h) //2
    
    if arr[mid] == x:
      return mid

    elif arr[mid] > x:
      return binarySearch(arr,l,mid-1,x)

    elif arr[mid] <x:
      return binarySearch(arr,mid+1,h,x)

  else:
    return -1

#main
arr = []
n = int(input("Enter the number of elements:"))

print("The elements of array:-")
for i in range(0,n):
  lst = int(input())

  arr.append(lst)

arr.sort()
print(arr)
x = int(input("Enter the number to be searched:")) 

result = binarySearch(arr, 0 , len(arr)-1, x)

if result != -1:
    print("Element is present at index ", result)
else:
    print("Element is not present in array")

#jump search
import math
 
def jumpSearch( arr , x , n ):
     
    # Finding block size to be jumped
    m = int(math.sqrt(n))
     
    # block where element is
    prev = 0
    while arr[int(min(m, n)-1)] < x:
        prev = m
        m += int(math.sqrt(n))
        if prev >= n:
            return -1
     
    # linear search for x in the blocl
    while arr[int(prev)] < x:
        prev += 1
         
        # If we reached next block or end of array, element is not present.
        if prev == min(m, n):
            return -1
     
    # If element is found return index otherwise return -1
    if arr[int(prev)] == x:
        return prev
     
    return -1
 
 
#main
arr = []
n = int(input("Enter the number of elements:"))

print("The elements of array:-")
for i in range(0,n):
  lst = int(input())

  arr.append(lst)

arr.sort()
print(arr)

x = int(input("Enter the number to be searched:")) 

result = jumpSearch(arr,x,n)

if result != -1:
    print("Element is present at index ", result)
else:
    print("Element is not present in array")

#interpolation search
#l is lower index
#h is the higher index
#pos is the postion of the index
#Function
def interpolationSearch(arr, l, h, x):

  if (l <= h and x >= arr[l] and x <= arr[h]):  #arr[h]= last index element and arr[l] = starting index element

     pos = l + ((h - l) // (arr[h] - arr[l]) * #formula 
                    (x - arr[l]))
     
     if arr[pos] == x:
            return pos

     if arr[pos] < x:
            return interpolationSearch(arr, pos + 1,  #l=pos+1 and h is the last index
                                       h, x)

     if arr[pos] > x:
            return interpolationSearch(arr, l,    
                                       pos - 1, x)  #h=pos-1 and l is the first index
  return -1      

#main

arr = []
n = int(input("Enter the number of elements:"))

print("The elements of array:-")
for i in range(0,n):
  lst = int(input())

  arr.append(lst)

arr.sort()
print(arr)
x = int(input("Enter the number to be searched:")) 

result = interpolationSearch(arr,0,n-1,x)

if result != -1:
    print("Element is present at index ", result)
else:
    print("Element is not present in array")

#exponential search
#n is the number of elements
#x is number to be searched


def exponentialSearch(arr, n, x):
    
    if arr[0] == x:
        return 0
          
    i = 1
    while i < n and arr[i] <= x:
        i = i * 2
      
    return binarySearch( arr, i // 2, 
                         min(i, n-1), x)

#main

arr = []
n = int(input("Enter the number of elements:"))

print("The elements of array:-")
for i in range(0,n):
  lst = int(input())

  arr.append(lst)

arr.sort()
print(arr)
x = int(input("Enter the number to be searched:")) 

result = exponentialSearch(arr,n,x)

if result != -1:
    print("Element is present at index ", result)
else:
    print("Element is not present in array")